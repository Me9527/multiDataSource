### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %p %c{1}.%M(%L) | %m%n
### log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
### log4j.appender.stdout.MaxFileSize=30MB
### log4j.appender.stdout.MaxBackupIndex=1  
### log4j.appender.stdout.file=${catalina.home}/logs/common.log

### global log message to file ###
log4j.appender.stdoutToFile.file=${catalina.home}/logs/stdoutToFile.log 
log4j.appender.stdoutToFile=org.apache.log4j.RollingFileAppender 
log4j.appender.stdoutToFile.layout=org.apache.log4j.PatternLayout
log4j.appender.stdoutToFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %p %c{1}.%M(%L) | %m%n
log4j.appender.stdoutToFile.MaxFileSize=8MB
log4j.appender.stdoutToFile.MaxBackupIndex=1 

### log message of my apps to file. ###
log4j.appender.myapp.file=${catalina.home}/logs/myapp.log 
log4j.appender.myapp=org.apache.log4j.RollingFileAppender
log4j.appender.myapp.layout=org.apache.log4j.PatternLayout
log4j.appender.myapp.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %p %c{1}.%M(%L) | %m%n
log4j.appender.myapp.MaxFileSize=8MB
log4j.appender.myapp.MaxBackupIndex=1  

### direct messages to file hibernate.log ###
log4j.appender.hiberfile.File=${catalina.home}/logs/hibernate.log
log4j.appender.hiberfile=org.apache.log4j.RollingFileAppender
log4j.appender.hiberfile.layout=org.apache.log4j.PatternLayout
log4j.appender.hiberfile.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n


### loger root config ###
log4j.rootLogger=info, stdout

### tomcat  config ###
log4j.logger.org.apache.catalina=info

log4j.logger.org.acegisecurity=info
### spring root config ###
log4j.logger.org.springframework=info

### webwork root config ###
log4j.logger.com.opensymphony.webwork=info

### my apps config ###
log4j.logger.com.cpst.postal.settlement=info
### log4j.logger.cn.org.kungfu.zhou.filter=debug
### my apps config end ###

### fckeditor config ###
log4j.logger.net.fckeditor=info
### fckeditor config end ###

### hibernate config ###
### set log levels - for more verbose logging change 'info' to 'debug' ###
log4j.logger.org.hibernate=info
### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug
### log just the SQL
#log4j.logger.org.hibernate.SQL=debug
### log JDBC bind parameters ###
### log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug
### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=debug
### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug
### log cache activity ###
### log4j.logger.org.hibernate.cache=info
### log transaction activity
### log4j.logger.org.hibernate.transaction=info
### log JDBC resource acquisition
### log4j.logger.org.hibernate.jdbc=info
### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
# org.hibernate.SQL  在所有SQL DML语句被执行时为它们记录日志 
# org.hibernate.type  为所有JDBC参数记录日志 
# org.hibernate.tool.hbm2ddl  在所有SQL DDL语句执行时为它们记录日志 
# org.hibernate.pretty  在session清洗(flush)时，为所有与其关联的实体(最多20个)的状态记录日志 
# org.hibernate.cache  为所有二级缓存的活动记录日志 
# org.hibernate.transaction  为事务相关的活动记录日志 
# org.hibernate.jdbc  为所有JDBC资源的获取记录日志 
# org.hibernate.hql.AST  在解析查询的时候,记录HQL和SQL的AST分析日志 
# org.hibernate.secure  为JAAS认证请求做日志 
# org.hibernate  为任何Hibernate相关信息做日志 (信息量较大, 但对查错非常有帮助) 

 