<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-2.5.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 
	<tx:annotation-driven/> 
	<aop:aspectj-autoproxy/>
 	-->
 	
	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:properties/jdbc.properties</value>
				<value>classpath*:properties/hibernate.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源定义,使用Apache DBCP 连接池 -->
	<bean id="dataSourceA" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<bean id="dataSourceB" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc2.driverClassName}" />
		<property name="url" value="${jdbc2.url}" />
		<property name="username" value="${jdbc2.username}" />
		<property name="password" value="${jdbc2.password}" />
		<property name="maxActive" value="${jdbc2.maxActive}" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="false" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<util:map id="dataSources">
		<entry key="A" value-ref="dataSourceA" />
		<entry key="B" value-ref="dataSourceB" />
	</util:map>
	
	<bean id="dataSourceLookup" class="org.springframework.jdbc.datasource.lookup.MapDataSourceLookup">
		<constructor-arg>
			<ref bean="dataSources" />
		</constructor-arg>
	</bean>
	
	<bean id="dataSource" class="com.cpst.framework.spring.PrototypeLoadBalanceDataSource">
		<property name="targetDataSources" ref="dataSources" />
		<property name="dataSourceLookup" ref="dataSourceLookup" />
		<property name="defaultTargetDataSource" ref="dataSourceA" />
	</bean>  

	<bean id="sessionFactory" class="com.cpst.framework.spring.LocalSessionFactoryBeanUsePathPatternMatchingConfigFile">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
				<!-- 
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
				 -->
				<prop key="hibernate.validator.autoregister_listeners">${hibernate.validator.autoregister_listeners}</prop>
				<prop key="hibernate.validator.apply_to_ddl">${hibernate.validator.apply_to_ddl}</prop>
				<prop key="javax.persistence.validation.mode">${javax.persistence.validation.mode}</prop>
				
			</props>
		</property>
		
		<property name="moduleMappingResource">
			 <value>classpath*:modules/**/hibernate-conf/*.hbm.xml</value>
		</property>
	</bean>
	
	<!-- Hibernate 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
 
	<!-- 事务拦截方式 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
			<tx:method name="list*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
			 -->

			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务配置 -->
	<aop:config proxy-target-class="false">
		<aop:pointcut id="projectServiceOperation" expression="execution(* com.cpst.postal.settlement..*ServiceImpl.*(..))" />
		<aop:advisor pointcut-ref="projectServiceOperation" advice-ref="txAdvice" />
	</aop:config>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"> <ref bean="dataSource"/> </property>
    </bean>
    
	<bean id="jdbcTemplateA" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"> <ref bean="dataSourceA"/> </property>
    </bean>
    
    <bean id="jdbcTemplateB" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"> <ref bean="dataSourceB"/> </property>
    </bean>

</beans>